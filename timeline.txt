https://www.youtube.com/@ukrknowledge

1 - Вступ
0:00:00 Що буде охоплювати ця серія
0:06:27 Хто я
0:07:59 Чому ці лекції
0:09:20 Передумови
0:12:43 Як слідкувати
0:14:27 Як можна програмувати зімною
0:17:48 Налаштування Visual Studio
0:24:32 Налагоджування з Visual Studio
0:27:59 Мій Github
0:29:13 Налаштування Emacs
0:35:02 Творення середовище розробки
0:41:44 Кодуємо з Emacs
0:45:15 Пишемо build.bat
0:52:56 Виправлення проблеми у emacs.bat
0:58:52 Налаштування RemedyBg
1:01:12 Виправлення проблеми у build.bat
1:04:32 Вертаємо до RemedyBg
1:07:12 Налаштування Visual Studio з Emacs

2 - Вікна та Windows
00:00 Вікно в Windows
03:30 Головний Цикл
04:42 Програмуємо вікно в Win32
22:18 Головний Цикл
30:24 Маємо Вікно

3 - Кольори і Анімація
00:00 Вступ
00:36 Пікселі
01:59 Кольори
05:40 Альфа
07:17 Буфер кадри/Бітмап
08:24 Положення Бітмапа у пам'яті
14:19 Запрограмуємо буфера кадри
30:26 Додаємо цікавішу графіку
33:02 Як працює анімація
36:05 Отримуємо час кадри
44:12 Кодуємо анімацію

4 - Перспективна Проєкція
00:00 Вступ
00:32 Як кодувати геометрію
03:11 План на відео
03:27 Що таке перспектива
08:55 Виведення рівняння для проєкції
16:44 Простір NDC
20:35 Кодуємо перспективну проєкцію
38:12 Творимо анімацію кінцевих точкок трикутника

5 Растеризація
00:00 Вступ
00:31 Растеризація
07:21 Формули Ребра
11:01 Скалярний Добуток
15:00 Векторний Добуток
20:57 Формула Ребра 2
25:49 Кодуємо Растеризацію
35:30 Додаємо кольори до Трикутників
38:56 Правила Заповнення
44:40 Кодуємо Правила Заповнення

6 Барицентрична Інтерполяція
00:00 Вступ
00:32 Лінійна Інтерполяція
06:06 Інтерполяція Векторів
07:58 Трикутникова Інтерполяція
14:23 Виводимо рівняння трикутникову інтерполяцію
19:01 Барицентричні Координати
19:46 Геометрична Інтерпретація Барицентричних Координатів
25:42 Друга Інтерпретація Барицентричних Координатів
31:53 Кодуємо Барицентричну Інтерполяцію
38:59 Приспішуємо Растеризатора
43:36 Виправлюємо помилку у Растеризатора

7 Z буферизація
00:00 Вступ
00:58 Оклюзія
01:30 Z-Буферізація
04:19 Кодуємо Z-Буферізацію
09:43 Бачимо що щось не так
10:23 Знаходимо чому є помилка
15:22 Починаємо виводити Z-Інтерполяцію
20:10 Виведення Z-Інтерполяції
29:51 Підсумка
31:14 Виправляємо помилки у коді
32:22 Додаємо трикутника до сцени

8 Матриці Перетворення
0:00:00 Вступ
0:00:33 Головні перетворення
0:01:46 Матриці
0:03:19 Множення матриці з вектором
0:06:06 Множення матриці з матрицями
0:07:59 Матриці та Перетворення
0:15:11 Масштабування
0:16:27 Паралельне Перенесення
0:20:06 Однорідні Координати
0:24:48 Поворот
0:27:56 Порядок Перетворення
0:30:25 Схема Матричної Пам'яті
0:35:03 Кодуємо Перетворення
0:46:13 Додаємо перетворення до об'єкта
0:56:09 Переходимо чому об'єкт зникає
1:01:21 Індексний Буфер
1:04:32 Кодуємо Індексний Буфер для Куба
1:11:27 Бачимо результат

9 Простір Камери
0:00:00 Вступ
0:00:59 Камера
0:02:03 Матриця Камери
0:07:46 Виводимо повернену матрицю
0:11:04 Простір Камери
0:12:35 Клавіші які контролюють Камера
0:13:13 Кодуємо змінну положення камери
0:26:10 Виправляємо помилку у положення камери
0:31:01 Поворот Камери
0:33:42 Рискання та Тангаж
0:35:39 Обертання у Просторі Камери
0:38:13 Обертання у Просторі Світу
0:42:14 Кодуємо, отримуємо повідомлення мишки
0:50:01 Обчислюємо тангаж та рискання
0:56:06 Творимо матрицю орієнтації камери
1:02:46 Провіряємо чи наше вікно є активне
1:04:41 Провіряємо результат

10 Однорідні Координати
00:00 Вступ
01:08 Пробуємо створити матрицю перспективи
02:08 "Нормалізація Координат"
03:28 Перспективна Матриця 1
05:17 Геометрична Інтерпретація w != 0,1
10:16 Перспективна Матриця 2
10:50 Співвідношення Вікна
13:33 Поле Зору
17:12 NearZ/FarZ
20:31 Виводимо перетворення Z
23:43 Інтерполювання Z-Координата
26:21 Перспективна Матриця 3
26:44 Всі наші простори
27:37 Кодуємо Перспективну Матрицю
33:18 Кодуємо Інтерполяцію нового Z-Координата
36:43 Здійснюємо програму та міняємо Співвідношення
37:07 Міняємо поле зору
39:22 Міняємо площини Near і Far

11 Текстура
0:00:00 Вступ
0:01:05 Текстура
0:02:53 UV-Mapping/Розгортка
0:09:41 Алгоритм Самплінґ Текстури
0:10:48 Метод Найближчого Сусіда/Nearest Neighbor
0:16:19 Кодуємо Метод Найближчого Сусіда
0:13:13 Кодуємо змінну положення камери
0:25:54 Бачимо проблеми у нашому результаті
0:27:11 Інтерполяція Атрибутів у Просторі Перспективи
0:33:46 Кодуємо правильну інтерполяцію атрибутів
0:38:24 Аліасинг
0:41:05 Білінійна Інтерполяція/Bilinear Interpolation
0:42:14 Білінійна Інтерполяція у Одному Вимірі
0:49:47 Білінійна Інтерполяція у Двох Вимірах
0:54:55 Крайові Випадки
0:56:10 Центри Текселів у Просторі UV
0:59:29 Кодуємо Білінійну Інтерполяцію
1:13:41 Бачимо що результат дуже розмиті
1:14:44 Переходимо приклади щоби зрозуміти результат
1:17:24 Кодуємо більші квадрати у текстурі
1:19:58 Бачимо що добре зображується текстура
1:21:07 Переходимо ідеї інших методів текстури

12 Відсікання
0:00:00 Вступ
0:01:12 Кодуємо трикутники яких неправильно малюємо
0:05:02 Переходимо ці випадки у слайдах
0:09:10 Крайні Випадки
0:10:34 Відсікання
0:18:26 Випадки Відсікання
0:19:48 Алгоритм Відсікання
0:26:09 Псевдокод Відсікання
0:30:21 Виводимо IsBehindPlane
0:35:34 Виводимо CalculateIntersection
0:48:39 Починаємо кодувати алгоритм
0:59:16 Кодуємо Case 2
1:05:34 Кодуємо Case 1
1:11:37 Кодуємо IsBehindPlane
1:15:10 Кодуємо CalculateIntersection
1:19:39 Включаємо код до решти програми
1:28:51 Бачимо що код працює!
1:31:42 Налагоджуємо щоби краще зрозуміти як код працює
1:35:34 Кінчаємо

13 Оптимізація
0:00:00 Вступ
0:05:42 Кодуємо трикутники яких неправильно малюємо
0:05:02 Стратегії Оптимізації
0:07:09 Мова Асемблера
0:14:19 Стек Викликів
0:18:03 Терміни Оптимізації
0:20:05 Виконання Інструкції
0:24:09 Інструменти Профілювання
0:26:16 Профілюємо з Visual Studio Profiler
0:32:46 Друкуємо час кадри
0:35:08 Використовуємо AMD uProf
0:41:17 Конвеєр Команд
0:45:35 Залежності Виконання
0:49:48 Лічильники Конвеєра
0:51:48 Переходи
0:56:21 Оптимізація UV обчислення
0:58:30 Кодуємо оптимізацію UV
1:08:57 Виводимо оптимізацію обчислення ребер
1:18:14 Кодуємо оптимізацію ребер
1:26:35 Аналізуємо код в AMD uProf
1:32:41 Кеш
1:42:21 Лічильники Кешу
1:43:57 Аналізуємо кеш у DrawTriangle

14 Чисельна Точність
0:00:00 Вступ
0:00:26 Виправляємо помилки
0:03:23 Огляд
0:04:52 Бачимо що є тріщини у трикутників
0:07:42 Беззнакові Цілі
0:12:36 Цілі Числа
0:14:52 Дробові числа
0:18:16 Числа з рухомою комою
0:28:42 Додавання/Віднімання Floats
0:33:57 Цілочисельна Растеризація
0:36:01 Обчислення точності растеризатора
0:48:13 Кодуємо цілі числа у растеризаторі
0:52:39 Субпіксельне Положення
0:58:08 Числа з нерухомою комою
1:00:20 Растеризація з нерухомою комою
1:08:11 Кодуємо числа з нерухомою комою
1:18:40 Виправляємо переповнення
1:21:00 Оптимізуємо умовний перехід

15 SIMD Растеризація
0:00:00 Вступ
0:00:26 SIMD/SSE
0:03:23 Приклади SSE
0:14:50 SIMD у Растеризації 1
0:21:24 Умовні Переходи у SIMD
0:34:57 SIMD у Растеризації 2
0:37:49 Padding/Оббивка
0:40:33 Кодуємо SSE у DrawTriangle
0:52:34 Кодуємо оператори та функції зі SSE
1:12:19 Кодуємо Padding/Оббивку
1:15:03 Налагоджуємо програму та виправляємо помилки
1:22:17 SIMD у Фільтрування Текстур
1:24:29 Кодуємо фільтрування методом найближчого сусіда
1:36:23 Кодуємо білінійну фільтрацію у SSE
1:40:17 Додаємо функції та оператори
1:49:08 Оптимізуємо наш код з умовним переходом
1:51:35 Аналізуємо продуктивність програми

16 Завантаження Моделей
0:00:00 Вступ
0:00:56 Додавання арт-активи
0:04:09 Assimp
0:07:09 Меш/Сітка
0:12:08 Кодуємо завантаження моделей з Assimp
0:31:05 Кодуємо малювання моделей
0:39:07 Бачимо результат та завантажуємо файл
0:41:32 Нормалізуємо розмір у просторі моделі
0:50:09 Матеріали і Текстури Моделів
0:52:44 STB та завантаження Текстур
0:54:49 Кодуємо завантаження текстур
1:06:56 Налагоджуємо і бачимо проблеми у шлях файл
1:13:58 Застосовуємо текстури моделей в рендері
1:16:23 Треба текстуру обернути
1:20:30 Тепер працює і налагоджуємо інша модель
1:23:05 Проблема у точності глибини растеризатора
1:27:41 Змушуємо щоби барицентричні координати додавалися 1
1:33:42 Додаємо повторення текстури до обробки кордони
1:43:08 Все працює і кінчаємо

17 Що таке GPU і як його програмувати
00:00 Вступ
01:08 VRAM
02:22 Як його програмувати
05:57 Життя трикутника
06:37 Вхідний асемблер/Input Assembler
08:46 Вершинний шейдер/Vertex Shader
11:47 Пост-обробка вершин/Vert Post-Processing
12:58 Растеризатор/Rasterizer
14:30 Піксельний Шейдер/Pixel Shader
19:29 Об'єднання виходів/Output Merger
24:19 Схема графічного процесора
25:13 SIMD у графічному процесорі
33:32 Блок текстур/Texture Unit
34:59 Будуємо графічного процесора
37:56 Життя трикутника #2

18 DX12 
0:00:00 Графічні APIs
0:02:52 Модель драйвера
0:06:03 Переорганізуємо програмного рендера
0:12:18 DXGI
0:21:04 Шар перевірки
0:23:23 Черга команд
0:27:42 SwapChain
0:38:21 Список команд
0:41:12 Дескриптори
0:51:20 Команд очищування
0:54:22 Надіслання команд
0:57:30 Паркани
1:06:30 Закриття списку команд
1:10:21 Бар'єр

19 Копіювання дані між процесорами
0:00:00 Вступ
0:00:35 Виділення пам'яті
0:08:43 Лінійна арена
0:13:21 Кодуємо лінійну арену
0:19:51 Виділення пам'яті та творення ресурсу
0:28:48 Вирівнювання пам'яті
0:41:57 Кодуємо вирівнювання пам'яті
0:46:01 Дескрипторна купа
0:47:48 Кодуємо дескрипторну купу
0:54:39 Очищуємо буфер глибини
0:59:23 Копіювання дані від CPU до GPU
1:06:57 Кодуємо арену завантаження
1:14:49 Додаємо GPU ресурси для моделі
1:15:52 Кодуємо функцію для копіювання дані буфера
1:23:06 Копіюємо буфер вершин та індексів
1:25:36 Чекаємо на здійснення списку перед головним циклом
1:26:34 Набивки у структурах
1:28:31 Копіювання текстур
1:31:08 Кодуємо копіювання текстур
1:41:26 Налагоджуємо програму у RenderDoc

20 DX12 Шейдери та малювання
0:00:00 Вступ
0:00:41 Шейдери
0:04:02 Вершинний шейдер
0:15:59 Піксельний шейдер
0:20:48 Графічний конвеєр
0:22:29 Графічний підпис
0:33:22 Кодуємо графічний підпис
0:45:42 Творимо графічний підпис
1:05:51 Прив'язуємо буфери кольору/глибини
1:12:32 Прив'язуємо ресурси для малювання 1
1:16:34 GPU дескриптори
1:20:53 Кодуємо GPU дескриптори
1:28:33 Прив'язуємо ресурси для малювання 2
1:34:40 Здійснюємо код і все працює
1:36:48 Провірюємо малювання у RenderDoc
1:38:36 Стан та прив'язування ресурсів

21 MIP та анізотропна фільтрація

0:00:00 Вступ
0:00:41 Проблему зі білінійною інтерполяцією
0:03:25 Мір текстурування
0:07:39 Творення мір-рівнів
0:09:29 Кодуємо творення та копіювання мір-рівнів до GPU
0:29:32 Кодуємо MIP_POINT та MIP_LINEAR фільтрації у семплері
0:32:21 Кодуємо анізотропну фільтрацію
0:33:26 Пояснюю алгоритм мір-фільтрації MIN_MAG_MIP_POINT
0:34:58 Дискретні похідні
0:38:35 Обчислювання мір-рівня
0:47:45 Переходимо MIN_MAG_LINEAR_MIP_POINT
0:48:40 Переходимо MIN_MAG_POINT_MIP_LINEAR
0:51:08 Переходимо MIN_MAG_MIP_LINEAR
0:52:42 Переходимо анізотропну фільтрацію
0:56:59 Квадратна растеризація
1:03:01 Хвильові операції

22 Освітлення Фонга
0:00:00 Вступ
0:00:28 Світло та кольори
0:06:30 Кодуємо мішання світла та матеріала
0:10:42 Моделювання світла
0:15:06 Освітлення Фонга
0:22:28 Навколишнє світло
0:25:14 Кодуємо навколишнє світло
0:30:21 Дифузне відбиття
0:50:05 Приклади дифузного відбиття
0:53:36 Кодуємо дифузне відбиття
1:00:05 Дзеркальне відбиття
1:10:35 Кодуємо дзеркальне відбиття
1:15:40 Перетворення нормаль

23 Точкові Джерела Світла
00:00 Вступ
00:18 Виправлення помилки у дзеркальному відбитті
01:52 Кодування виправлення дзеркального відбиття
03:34 Точкові джерела світла
06:33 Виведення формули ослаблення світла
14:13 Аналіз формули ослаблення світла
20:21 Кодування точкових джерел світла
36:30 Малювання кубів для кожного точкового джерела світла
48:43 Отримання NaN та налагодження шейдера у PIX
53:40 Виправлення помилки у коді
54:44 Інші джерела світла

24 Модель Блінна-Фонга
00:00 Вступ
03:13 Конус світла у моделі Фонга
07:25 Деякі спостерігання щодо дзеркальне відбиття
09:42 Півшляховий вектор
10:18 Виводимо дзеркальне відбиття у моделі Блінна-Фонга
12:44 Особливості моделі Блінна-Фонга
14:47 Виводимо формулу для напівшляхового вектора
18:21 Кодуємо метод Блінна-Фонга
19:44 Порівнюємо модель Фонга та модель Блінна-Фонга

25 Відображення нормалей
00:00 Вступ
01:20 Мікродеталі
03:23 Відображення нормалей - 1
06:46 Карта нормалей
08:04 Перетворення нормалей
10:51 Дотичний простір
17:00 Відображення нормалей - 2
18:04 Деталі відображення нормалей
33:01 Кодуємо зміни шейдерів
35:52 Кодуємо творення міп-рівнів карти нормалей
42:35 Кодуємо завантаження даних 
48:21 Кодуємо зміни графічного конвеєра та рендерування
53:22 Здійснюємо код, але купа дескрипторів за малою 
54:07 Бачимо результат відображення нормалей
56:09 Обчислювання дотичний/бідотичний векторів